<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf"
                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <!-- Google Inbox style Expansion Panels, as outlined in spec: -->
    <!-- https://material.io/guidelines/components/expansion-panels.html -->
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="MaterialDesignTheme.Expander.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <converters:MathMultipleConverter x:Key="MathMlpMultipleConverter" Operation="Multiply" />

    <Style x:Key="MaterialDesignExpansionPanelItem" TargetType="wpf:ExpansionPanelItem">
        <!--<Setter Property="wpf:ShadowAssist.ShadowDepth" Value="Depth1" />-->
        <Setter Property="Margin" Value="0 0 0 0" />        
        <Setter Property="TextElement.FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="wpf:ExpansionPanelItem">
                    <Grid Background="{DynamicResource MaterialDesignBackground}" Margin="0 1 0 0">
                        <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(wpf:ShadowAssist.CacheMode)}">
                            <Border x:Name="Shadow" Background="{DynamicResource MaterialDesignPaper}" CornerRadius="0" BorderThickness="0"
                                    Effect="{DynamicResource MaterialDesignShadowDepth1}">
                                    <!--wpf:ShadowAssist.ShadowDepth="{TemplateBinding wpf:ShadowAssist.ShadowDepth}"-->
                            </Border>
                        </AdornerDecorator>
                        <Expander Name="PART_Expander"
                                  IsExpanded="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}"   
                                  Header="{TemplateBinding Content}"
                                  HeaderTemplate="{Binding Path=ItemHeaderTemplate, RelativeSource={RelativeSource  AncestorType={x:Type ItemsControl}}}">                                  
                            <Grid>
                                <ContentControl x:Name="PART_Detail">
                                    <ContentControl.Tag>
                                        <system:Double>0.0</system:Double>
                                    </ContentControl.Tag>
                                    <ContentControl.Height>
                                        <MultiBinding Converter="{StaticResource MathMlpMultipleConverter}">
                                            <Binding ElementName="PART_Content" Path="ActualHeight" />
                                            <Binding ElementName="PART_Detail" Path="Tag" />
                                        </MultiBinding>
                                    </ContentControl.Height>
                                    <StackPanel>
                                        <ContentPresenter x:Name="PART_Content"
                                                          Content="{TemplateBinding Content}"
                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}">
                                        </ContentPresenter>
                                    </StackPanel>
                                </ContentControl>

                                <Border Background="{DynamicResource MaterialDesignDivider}" Height="1" Opacity="0.12" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" VerticalAlignment="Bottom" />
                            </Grid>
                        </Expander>                        
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_Content" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Shadow" Property="Effect" Value="{DynamicResource MaterialDesignShadowDepth2}" /> 
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_Detail" Storyboard.TargetProperty="Tag" From="0" To="1" Duration="00:00:0.15">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>                                    
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" BeginTime="00:00:00">
                                            <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0 0 0 0" />
                                            <SplineThicknessKeyFrame KeyTime="00:00:0.12" Value="0 16 0 16" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" BeginTime="00:00:00">
                                            <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0 16 0 16" />
                                            <SplineThicknessKeyFrame KeyTime="00:00:0.12" Value="0 0 0 0" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="PART_Content" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="wpf:ExpansionPanel">
        <Setter Property="SelectionMode" Value="Single" />        
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource MaterialDesignExpansionPanelItem}" />     
          
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type wpf:ExpansionPanel}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}">
                        <!--<ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">-->
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>                        
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
