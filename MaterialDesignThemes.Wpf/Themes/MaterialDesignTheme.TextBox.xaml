<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf"
                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ValidationErrorTemplate.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Menu.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:TextFieldHintVisibilityConverter x:Key="TextFieldHintVisibilityConverter" />
    <converters:MathConverter Operation="Divide" x:Key="DivisionMathConverter" />
    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:TextFieldClearButtonVisibilityConverter x:Key="ClearTextConverter" />
    <converters:NotConverter x:Key="NotConverter" />
    <converters:FontSizeToHintOffsetConverter x:Key="FontSizeToHintOffsetConverter" />
    <converters:FontToLineHeightConverter x:Key="FontToLineHeightConverter" />
    <converters:MathConverter x:Key="MathMultiplyConverter" Operation="Multiply" />

    <Point x:Key="DefaultFloatingOffset">1,-16</Point>

    <Style x:Key="MaterialDesignTextBoxBase" TargetType="{x:Type TextBoxBase}">
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="wpf:TextFieldAssist.TextBoxViewMargin" Value="1 0 1 0" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="CaretBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Padding" Value="{x:Static wpf:Constants.TextBoxDefaultPadding}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource MaterialDesignValidationErrorTemplate}"/>
        <Setter Property="wpf:TextFieldAssist.IncludeSpellingSuggestions" Value="{Binding RelativeSource={RelativeSource Self}, Path=(SpellCheck.IsEnabled)}" />
        <Setter Property="wpf:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="wpf:HintAssist.Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="ContextMenu" Value="{StaticResource MaterialDesignDefaultContextMenu}"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ScaleTransform" From="0" To="1" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="ScaleTransform" From="0" To="1" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ScaleTransform" To="0" BeginTime="0:0:0.45" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="ScaleTransform" To="0" BeginTime="0:0:0.45" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ScaleTransform" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="ScaleTransform" To="0" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{DynamicResource MaterialDesignTextFieldBoxHoverBackground}"
                            CornerRadius="{TemplateBinding wpf:TextFieldAssist.TextFieldCornerRadius}"
                            Visibility="{TemplateBinding wpf:TextFieldAssist.RippleOnFocusEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                            RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="ScaleTransform" ScaleX="0" ScaleY="0" />
                            </Border.RenderTransform>
                        </Border>
                        <AdornerDecorator>
                            <Border
                                x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding wpf:TextFieldAssist.TextFieldCornerRadius}"
                                SnapsToDevicePixels="True"
                                wpf:BottomDashedLineAdorner.Brush="{TemplateBinding BorderBrush}"
                                wpf:BottomDashedLineAdorner.Thickness="{TemplateBinding BorderThickness}">
                                <Grid
                                    x:Name="textFieldGrid"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    Margin="{TemplateBinding Padding}"
                                    MinWidth="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock
                                        x:Name="PrefixTextBlock"
                                        Grid.Column="0"
                                        FontSize="{TemplateBinding FontSize}"
                                        Opacity="{TemplateBinding wpf:HintAssist.HintOpacity}"
                                        Text="{TemplateBinding wpf:TextFieldAssist.PrefixText}" />
                                    <ScrollViewer
                                        x:Name="PART_ContentHost"
                                        Grid.Column="1"
                                        Focusable="false"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                        wpf:ScrollViewerAssist.IgnorePadding="True" />
                                    <wpf:SmartHint
                                        x:Name="Hint"
                                        Grid.Column="1"
                                        HintProxy="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:HintProxyFabricConverter.Instance}}"
                                        FontSize="{TemplateBinding FontSize}"
                                        HintOpacity="{TemplateBinding wpf:HintAssist.HintOpacity}"
                                        UseFloating="{TemplateBinding wpf:HintAssist.IsFloating}"
                                        FloatingScale="{TemplateBinding wpf:HintAssist.FloatingScale}"
                                        FloatingOffset="{TemplateBinding wpf:HintAssist.FloatingOffset}">
                                        <wpf:SmartHint.Hint>
                                            <Border
                                                x:Name="HintBackgroundBorder"
                                                Background="{TemplateBinding wpf:HintAssist.Background}"
                                                CornerRadius="2">
                                                <ContentPresenter
                                                    x:Name="HintWrapper"
                                                    Content="{TemplateBinding wpf:HintAssist.Hint}" />
                                            </Border>
                                        </wpf:SmartHint.Hint>
                                    </wpf:SmartHint>
                                    <StackPanel
                                        Orientation="Horizontal"
                                        Grid.Column="2">
                                        <TextBlock
                                            x:Name="SuffixTextBlock"
                                            FontSize="{TemplateBinding FontSize}"
                                            Opacity="{TemplateBinding wpf:HintAssist.HintOpacity}"
                                            Text="{TemplateBinding wpf:TextFieldAssist.SuffixText}" />
                                        <Button
                                            x:Name="PART_ClearButton"
                                            Padding="2,0,0,0"
                                            Focusable="False"
                                            Style="{DynamicResource MaterialDesignToolButton}">
                                            <Button.Visibility>
                                                <MultiBinding Converter="{StaticResource ClearTextConverter}">
                                                    <Binding ElementName="Hint" Path="IsContentNullOrEmpty" Converter="{StaticResource NotConverter}" />
                                                    <Binding Path="(wpf:TextFieldAssist.HasClearButton)" RelativeSource="{RelativeSource TemplatedParent}" />
                                                </MultiBinding>
                                            </Button.Visibility>
                                            <Button.Height>
                                                <MultiBinding Converter="{StaticResource FontToLineHeightConverter}">
                                                    <Binding Path="FontFamily" RelativeSource="{RelativeSource TemplatedParent}" />
                                                    <Binding Path="FontSize" RelativeSource="{RelativeSource TemplatedParent}" />
                                                </MultiBinding>
                                            </Button.Height>
                                            <wpf:PackIcon Margin="0" Kind="CloseCircle" />
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </AdornerDecorator>
                        <Border
                            x:Name="textFieldBoxBottomLine"
                            Background="{TemplateBinding BorderBrush}"
                            Height="0"
                            CornerRadius="{TemplateBinding wpf:TextFieldAssist.UnderlineCornerRadius}"
                            Visibility="{TemplateBinding wpf:TextFieldAssist.DecorationVisibility}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Bottom"
                            SnapsToDevicePixels="True" />
                        <wpf:Underline
                            x:Name="Underline"
                            Visibility="{TemplateBinding wpf:TextFieldAssist.DecorationVisibility}"
                            CornerRadius="{TemplateBinding wpf:TextFieldAssist.UnderlineCornerRadius}"
                            Background="{TemplateBinding wpf:TextFieldAssist.UnderlineBrush}" />
                        <Canvas VerticalAlignment="Bottom">
                            <TextBlock
                                Canvas.Top="2"
                                FontSize="10"
                                MaxWidth="{Binding ActualWidth, ElementName=border}"
                                Opacity="{TemplateBinding wpf:HintAssist.HintOpacity}"
                                Text="{TemplateBinding wpf:HintAssist.HelperText}" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="wpf:HintAssist.IsFloating" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Hint" Property="Foreground" Value="{Binding Path=(wpf:HintAssist.Foreground), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="Hint" Property="HintOpacity" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="wpf:HintAssist.IsFloating" Value="True" />
                                <Condition Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Padding" Value="{x:Static wpf:Constants.TextBoxFloatingHintPadding}" />
                        </MultiTrigger>
                        <Trigger Property="wpf:TextFieldAssist.HasFilledTextField" Value="True">
                            <Setter Property="Padding" Value="16 8" />
                            <Setter Property="Background" Value="{DynamicResource MaterialDesignTextFieldBoxBackground}" />
                        </Trigger>
                        <Trigger Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="True">
                            <Setter Property="VerticalContentAlignment" Value="Top" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextAreaBorder}" />
                            <Setter Property="Padding" Value="16" />
                            <Setter TargetName="Underline" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Hint" Property="Margin" Value="1,0,0,0" />
                            <Setter TargetName="Hint" Property="HintOpacity" Value="1" />
                            <Setter TargetName="Hint" Property="FloatingOffset">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource FontSizeToHintOffsetConverter}"
                                                  ConverterParameter="{StaticResource DefaultFloatingOffset}">
                                        <Binding Path="FontSize" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(wpf:HintAssist.FloatingOffset)" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="HintWrapper" Property="Opacity"
                                    Value="{Binding Path=(wpf:HintAssist.HintOpacity), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="True" />
                                <Condition Property="wpf:HintAssist.IsFloating" Value="True" />
                                <Condition SourceName="Hint" Property="IsHintInFloatingPosition" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HintBackgroundBorder" Property="Padding" Value="4, 0" />
                            <Setter Property="wpf:HintAssist.Background" Value="{DynamicResource MaterialDesignPaper}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="True" />
                                <Condition Property="wpf:HintAssist.IsFloating" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HintWrapper" Property="Opacity" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="textFieldBoxBottomLine" Property="Height" Value="0" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextAreaInactiveBorder}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextAreaInactiveBorder}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="border" Value="0.42" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="true" />
                                <Condition Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HintWrapper" Property="Opacity"
                                    Value="{Binding Path=(wpf:HintAssist.HintOpacity), RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PrefixTextBlock" Property="Opacity" Value="0.42" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="0.42" />
                            <Setter TargetName="HintWrapper" Property="Opacity"
                                    Value="{Binding Path=(wpf:HintAssist.HintOpacity), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MathMultiplyConverter}, ConverterParameter=0.42}" />
                            <Setter TargetName="SuffixTextBlock" Property="Opacity" Value="0.42" />
                            <Setter TargetName="PART_ClearButton" Property="Opacity" Value="0.42" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="False" />
                                <Condition Property="wpf:TextFieldAssist.HasFilledTextField" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="wpf:BottomDashedLineAdorner.IsAttached" Value="True" />
                        </MultiTrigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Underline" Property="IsActive" Value="True" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Margin" Value="-1" />
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="BorderBrush" Value="{Binding Path=(wpf:TextFieldAssist.UnderlineBrush), RelativeSource={RelativeSource Self}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="wpf:TextFieldAssist.HasFilledTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="textFieldBoxBottomLine" Property="Height" Value="2" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="wpf:TextFieldAssist.HasFilledTextField" Value="False" />
                                <Condition Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="False" />
                                <Condition Property="wpf:TextFieldAssist.NewSpecHighlightingEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{Binding Path=(wpf:TextFieldAssist.UnderlineBrush), RelativeSource={RelativeSource Self}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="wpf:TextFieldAssist.HasFilledTextField" Value="False" />
                                <Condition Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="False" />
                                <Condition Property="wpf:TextFieldAssist.NewSpecHighlightingEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="BorderThickness" Value="0,0,0,2" />
                            <Setter TargetName="border" Property="Padding" Value="0,4,0,3" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="wpf:TextFieldAssist.HasFilledTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource MaterialDesignTextFieldBoxHoverBackground}" />
                            <Setter TargetName="textFieldBoxBottomLine" Property="Height" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Margin" Value="-1" />
                            <Setter Property="BorderThickness" Value="2" />
                        </MultiTrigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}" />
                            <Setter TargetName="Underline" Property="Background" Value="{DynamicResource ValidationErrorBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True" />
                                <Condition Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Margin" Value="-1" />
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MaterialDesignTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBoxBase}" />

    <Style x:Key="MaterialDesignFloatingHintTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
        <Setter Property="wpf:HintAssist.IsFloating" Value="True"/>
    </Style>

    <Style x:Key="MaterialDesignFilledTextFieldTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
        <Setter Property="wpf:TextFieldAssist.HasFilledTextField" Value="True" />
        <Setter Property="wpf:TextFieldAssist.RippleOnFocusEnabled" Value="True" />
        <Setter Property="wpf:TextFieldAssist.TextFieldCornerRadius" Value="4,4,0,0" />
        <Setter Property="wpf:TextFieldAssist.UnderlineCornerRadius" Value="0" />
    </Style>

    <Style x:Key="MaterialDesignOutlinedTextFieldTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
        <Setter Property="wpf:TextFieldAssist.HasOutlinedTextField" Value="True" />
        <Setter Property="wpf:TextFieldAssist.TextFieldCornerRadius" Value="4" />
    </Style>

</ResourceDictionary>
