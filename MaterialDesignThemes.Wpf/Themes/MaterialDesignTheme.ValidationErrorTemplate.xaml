<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf"
                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters">
    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" TrueValue="Visible" FalseValue="Collapsed"/>
    
    <ControlTemplate x:Key="MaterialDesignValidationErrorTemplate">
        <ControlTemplate.Resources>
            <DataTemplate DataType="{x:Type ValidationError}">
                <TextBlock Foreground="{DynamicResource ValidationErrorBrush}"
                                       FontSize="10"
                                       MaxWidth="250"
                                       Margin="2"
                                       TextWrapping="Wrap"
                                       Text="{Binding ErrorContent}"
                                       UseLayoutRounding="false" />
            </DataTemplate>
        </ControlTemplate.Resources>
        <StackPanel>
            <AdornedElementPlaceholder Name="Placeholder" />
            <Border Name="DefaultErrorViewerWrapper"
                        Visibility="Collapsed">
                <Border Name="DefaultErrorViewer"
                        Background="{DynamicResource MaterialDesignPaper}">
                    <ContentPresenter Content="{Binding CurrentItem}" />
                </Border>
            </Border>

            <wpf:CustomValidationPopup x:Name="ValidationPopup"
                                       IsOpen="False"
                                       Placement="Bottom" PlacementTarget="{Binding ElementName=Placeholder}"
                                       AllowsTransparency="True">
                <Border Background="{DynamicResource MaterialDesignPaper}">
                    <ContentPresenter Content="{Binding CurrentItem}" />
                </Border>
            </wpf:CustomValidationPopup>
        </StackPanel>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=Placeholder, Path=AdornedElement.(wpf:ValidationAssist.ShowOnFocus)}" Value="True"/>
                    <Condition Binding="{Binding ElementName=Placeholder, Path=AdornedElement.(wpf:ValidationAssist.UsePopup)}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="ValidationPopup" Property="IsOpen"
                        Value="{Binding ElementName=Placeholder, Path=AdornedElement.IsKeyboardFocusWithin, Mode=OneWay}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=Placeholder, Path=AdornedElement.(wpf:ValidationAssist.ShowOnFocus)}" Value="True"/>
                    <Condition Binding="{Binding ElementName=Placeholder, Path=AdornedElement.(wpf:ValidationAssist.UsePopup)}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="DefaultErrorViewer" Property="Visibility"
                        Value="{Binding ElementName=Placeholder, Path=AdornedElement.IsKeyboardFocusWithin, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            
            <DataTrigger Binding="{Binding ElementName=Placeholder, Path=AdornedElement.(wpf:ValidationAssist.UsePopup)}" Value="True">
                <Setter TargetName="ValidationPopup" Property="IsOpen" Value="True"/>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding ElementName=Placeholder, Path=AdornedElement.(wpf:ValidationAssist.UsePopup)}" Value="False">
                <Setter TargetName="DefaultErrorViewerWrapper" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
>>>>>>> ValidationErrorTemplate
    </ControlTemplate>
</ResourceDictionary>